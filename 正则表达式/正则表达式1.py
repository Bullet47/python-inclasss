import re
'''
Python 中使用正则表达式步骤如下。
1．用import re 导入正则表达式模块。
2．用re.compile()函数创建一个Regex 对象（记得使用原始字符串）。
3．向Regex 对象的search()方法传入想查找的字符串。它返回一个Match 对象。
4．调用Match 对象的group()方法，返回实际匹配文本的字符串。
向 re.compile()传入一个字符串值，表示正则表达式，它将返回一个Regex对象（或者就简称为Regex 对象）。
要创建一个Regex 对象来匹配电话号码模式，就在交互式环境中输入以下代码
（回忆一下，\d 表示“一个数字字符”，\d\d\d-\d\d\d-\d\d\d\d 是正确电话号码模式的正则表达式）。
'''
# Regex 对象的search()方法查找传入的字符串，寻找该正则表达式的所有匹配。如
# 果字符串中没有找到该正则表达式模式，search()方法将返回None。如果找到了该模式，
# search()方法将返回一个Match 对象。Match 对象有一个group()方法，它返回被查找字
# 符串中实际匹配的文本（稍后我会解释分组）
phoneNumRegex = re.compile(r'\d\d\d-\d\d\d-\d\d\d\d')
mo = phoneNumRegex.search('My number is 415-555-4242.')
print(mo.group())
'''
向 re.compile()传递原始字符串
回忆一下，Python 中转义字符使用倒斜杠（\）。字符串'\n'表示一个换行字符，而不是倒斜杠加上一个小写的 
n。你需要输入转义字符\\，才能打印出一个倒斜杠。所以'\\n'表示一个倒斜杠加上一个小写的 n。但是，通过在字符串的第一个引号之前加上 r，可以将该字符串标记为原始字符串，它不包括转义字符。
因为正则表达式常常使用倒斜杠，向 re.compile()函数传入原始字符串就很方便 ， 而 不 是 输 入 额 外 得 到 斜 杠 。 输 入  r'\d\d\d-\d\d\d-\d\d\d\d' 
， 比 输 入 '\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d'要容易得多。
'''